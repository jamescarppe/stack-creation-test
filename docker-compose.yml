version: '3.7'
services:
  db:
    user: postgres
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      placement:
        constraints:
          - "node.role==manager"
    image: postgres:17.2-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - ./db/stack.env
  nginx:
    image: private/storage-docker-nginx:latest
    working_dir: /www
    command: [nginx-debug, '-g', 'daemon off;']
    stop_grace_period: 20s
    healthcheck:
      test: "netstat -an | grep :80"
      interval: 20s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
    depends_on:
      - php
    configs:
      - source: nginx
        target: /etc/nginx/conf.d/default.conf
    ports:
      - "5401:80"
  php:
    healthcheck:
      test: "netstat -an | grep :9000"
      interval: 20s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
    working_dir: /www
    depends_on:
      - db
    image: private/storage-docker-php:latest
volumes:
  db_data:
configs:
  nginx:
    file: ./nginx/storage.conf
